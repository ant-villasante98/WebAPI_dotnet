{
  "Logging": { 
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "UniversityDB":"Host=localhost;Username=postgres;Password=noChavon;Database=University"
  },
  "JsonWebTokenKeys":{
    "ValidateIssuerSigningKey": true,
    "IssuerSigningKey":"DataBaseUniversity",
    "ValidateIssuer": true,
    "ValidIssuer": "https//localhost:7124",
    "ValidateAudience":true,
    "ValidAudience":"https//localhost:7124",
    "RequiereExpirationTime":true,
    "ValidateLifeTime":true
  },
  "Serilog":{
    "Using": [ "Serilog.Sinks.PostgreSQL.Configuration" ],
    "MinimumLevel":{
      "Default":"Verbose",
      "Override":{
        "Microsoft":"Warning",
        "Microsoft.Hosting.LifeTime":"Information"
      }
    },
    "WriteTo":[
      {
        "Name":"File",
        "Args":{
          "path":"./logs/log.txt",
          "rollingInterval":"Day"
        }
      },
      {
        "Name":"PostgreSQL",
        "Args":{
          "connectionString": "University",
          "sinkOptionSection":{
            "tableName":"Logs",
            "schemaName":"EventLogging",
            "autoCreateSqlTable":true,
            "batchPostingLimit":1000,
            "period":"0.00:00:30",
            "useCopy":false
          },
          "restrictedToMinimumLevel":"Verbose"
        }
      }
    ]
  },
  "Columns": {
    "message": "RenderedMessageColumnWriter",
    "message_template": "MessageTemplateColumnWriter",
    "level": {
      "Name": "LevelColumnWriter",
      "Args": {
        "renderAsText": true,
        "dbType": "Varchar"
      }
    },
    "raise_date": "TimestampColumnWriter",
    "exception": "ExceptionColumnWriter",
    "properties": "LogEventSerializedColumnWriter",
    "props_test": {
      "Name": "PropertiesColumnWriter",
      "Args": { "dbType": "Json" }
    },
    "machine_name": {
      "Name": "SinglePropertyColumnWriter",
      "Args": {
        "propertyName": "MachineName",
        "writeMethod": "Raw"
      }
    }
  }

  
}
